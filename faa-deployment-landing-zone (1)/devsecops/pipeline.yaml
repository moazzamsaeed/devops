name: landingZone-deployment-devsecops

variables:
  - template: variables.yaml

parameters:
- name: repos
  type: object
  default:
  - faa-tf-common-files
  - faa-tf-module-pep
  - faa-tf-module-rg
  - faa-deployment-landing-zone
  - faa-template
- name: copyRepos
  type: object
  default:
  - faa-tf-module-rg
  - faa-tf-module-pep


resources:
 repositories:
   - repository: faa-tf-module-pep
     name: Fondation/faa-tf-module-pep
     type: git
   - repository: faa-tf-common-files
     name: Fondation/faa-tf-common-files
     type: git
   - repository: faa-tf-module-kv
     name: Fondation/faa-tf-module-kv
     type: git
   - repository: faa-tf-module-logAnalytics
     name: Fondation/faa-tf-module-logAnalytics
     type: git
   - repository: faa-tf-module-rg
     name: Fondation/faa-tf-module-rg
     type: git
   - repository: faa-template
     name: Fondation/faa-template
     #ref: '$(Build.SourceBranch)'
     ref: refs/heads/features/mohitBansal/faa-413_deploy_dataproduct
     type: git
   - repository: faa-deployment-landing-zone
     name: Fondation/faa-deployment-landing-zone
     ref: '$(Build.SourceBranch)'
     type: git
     trigger:
      branches:
        include:
          - master
          - releases/*
      paths:
        include:
          - devsecops/*

stages:
- stage: rg_build
  jobs:
  - template: /pipeline.build.yaml@faa-template
    parameters:
      moduleName: resourceGroup
      workingDirectory: '$(Agent.BuildDirectory)/faa-tf-module-rg/'
      dependsOn: ''
      condition: ''
      moduleRepo: faa-tf-module-rg
      poolName: ${{ variables.poolName }}
      vmImage: ${{ variables.vmImage }}
      projectName: ${{ variables.projectName }}
      currentRepo: ${{ variables.currentRepo }}
     # branchName: master
      copyRepos: ${{ parameters.copyRepos }}
      repos: ${{ parameters.repos }}
      pipelineName: ${{ variables.pipelineName }}
      ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
        backendServiceArm: '${{ variables.pp_backendServiceArm }}'
        backendAzureRmResourceGroupName: '${{ variables.pp_backendAzureRmResourceGroupName }}'
        backendAzureRmStorageAccountName: '${{ variables.pp_backendAzureRmStorageAccountName }}'
        backendAzureRmContainerName: '${{ variables.pp_backendAzureRmContainerName }}'
        backendAzureRmKey: '${{ variables.pp_rg_backendAzureRmKey }}'
        keyvault: '${{ variables.pp_keyvault }}'
        env: '${{ variables.pp_env }}'
      ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/features') }}:
        backendServiceArm: ${{ variables.de_backendServiceArm }}
        backendAzureRmResourceGroupName: ${{ variables.de_backendAzureRmResourceGroupName }}
        backendAzureRmStorageAccountName: ${{ variables.de_backendAzureRmStorageAccountName }}
        backendAzureRmContainerName: ${{ variables.de_backendAzureRmContainerName }}
        backendAzureRmKey: ${{ variables.de_rg_backendAzureRmKey }}
        keyvault: ${{ variables.de_keyvault }}
        env: ${{ variables.de_env }}
      ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/releases') }}:
        backendServiceArm: ${{ variables.pr_backendServiceArm }}
        backendAzureRmResourceGroupName: ${{ variables.pr_backendAzureRmResourceGroupName }}
        backendAzureRmStorageAccountName: ${{ variables.pr_backendAzureRmStorageAccountName }}
        backendAzureRmContainerName: ${{ variables.pr_backendAzureRmContainerName }}
        backendAzureRmKey: ${{ variables.pr_rg_backendAzureRmKey }}
        keyvault: ${{ variables.pr_keyvault }}
        env: ${{ variables.pr_env }}

- stage : rg_deploy
  dependsOn: rg_build
  jobs:
  - template: /pipeline.deploy.yaml@faa-template
    parameters:
      moduleName: resourceGroup
      workingDirectory: '$(Agent.BuildDirectory)/faa-tf-module-rg/'
      dependsOn: ''
      condition: ''
      poolName: ${{ variables.poolName }}
      vmImage: ${{ variables.vmImage }}
      projectName: ${{ variables.projectName }}
      currentRepo: ${{ variables.currentRepo }}
      deployArtifactName: rg_deploy
      moduleRepo: faa-tf-module-rg
      #branchName: master
      copyRepos: ${{ parameters.copyRepos }}
      repos: ${{ parameters.repos }}
      pipelineName: ${{ variables.pipelineName }}
      ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
        backendServiceArm: '${{ variables.pp_backendServiceArm }}'
        backendAzureRmResourceGroupName: '${{ variables.pp_backendAzureRmResourceGroupName }}'
        backendAzureRmStorageAccountName: '${{ variables.pp_backendAzureRmStorageAccountName }}'
        backendAzureRmContainerName: '${{ variables.pp_backendAzureRmContainerName }}'
        backendAzureRmKey: '${{ variables.pp_rg_backendAzureRmKey }}'
        keyvault: '${{ variables.pp_keyvault }}'
        env: '${{ variables.pp_env }}'
      ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/features') }}:
        backendServiceArm: ${{ variables.de_backendServiceArm }}
        backendAzureRmResourceGroupName: ${{ variables.de_backendAzureRmResourceGroupName }}
        backendAzureRmStorageAccountName: ${{ variables.de_backendAzureRmStorageAccountName }}
        backendAzureRmContainerName: ${{ variables.de_backendAzureRmContainerName }}
        backendAzureRmKey: ${{ variables.de_rg_backendAzureRmKey }}
        keyvault: ${{ variables.de_keyvault }}
        env: ${{ variables.de_env }}
      ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/releases') }}:
        backendServiceArm: ${{ variables.pr_backendServiceArm }}
        backendAzureRmResourceGroupName: ${{ variables.pr_backendAzureRmResourceGroupName }}
        backendAzureRmStorageAccountName: ${{ variables.pr_backendAzureRmStorageAccountName }}
        backendAzureRmContainerName: ${{ variables.pr_backendAzureRmContainerName }}
        backendAzureRmKey: ${{ variables.pr_rg_backendAzureRmKey }}
        keyvault: ${{ variables.pr_keyvault }}
        env: ${{ variables.pr_env }}